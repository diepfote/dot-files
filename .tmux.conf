# SET TMUX VERSION NUMBER for version based if statements
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
              sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'


# --- sensible tmux

# set -g prefix C-a

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' every x seconds
set -g status-interval 300

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# ----

# ensure there is no gap in between window numbers
set-option -g renumber-windows on

# disable auto-rename for windows (changes name to currently executing binary)
# rename window bind: prefix-,
#
# setw -g automatic-rename off
set-window-option -g automatic-rename off

set -g default-terminal "screen-256color"

# tmux must be told that the terminal outside supports RGB colour.
set -as terminal-overrides ",gnome*:RGB"

# set status bar color  | to display the 256 color-palette run: ~/Documents/scripts/256-color-palette.sh
set -g status-bg colour240
set -g status-fg white
set -g status-right-length 250


set -g status-right '#{prefix_highlight} #(~/Documents/golang/tools/tmux-statusbar-right/tmux-statusbar-right)'


# pane border format
set -g pane-border-status bottom
set -g pane-border-style "bg=colour189 fg=black"
set -g pane-active-border-style "bg=default fg=colour135"
set -g pane-border-format " #{pane_id} | #(~/Documents/golang/tools/tmux-pane-border/tmux-pane-border #{pane_current_path}) | #{pane_current_command} "


set -g history-limit 100000


if-shell -b '[ "$(echo "$TMUX_VERSION < 3" | bc)" = 1 ]' " \
    set -g focus-events on "


if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' " \
    set -g mouse on "
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mode-mouse on "


# --------------
# alter tmux copy-paste behavior

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
  unbind-key -T copy-mode-vi v; \
  set -g status-keys vi; \
  set -g mode-keys vi; \
  unbind -T copy-mode-vi MouseDragEnd1Pane; \
  bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi -n C-v send-keys -X rectangle-toggle; \
  bind-key -T copy-mode-vi H send-keys -X page-up; \
  bind-key -T copy-mode-vi L send-keys -X page-down; \
  bind-key -T copy-mode-vi Y send-keys -X copy-pipe 'xargs "$HOME/Documents/scripts/bin/call_browser" run-in-new-window '; \
  set -g set-clipboard on ; "

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
  unbind-key -t vi-copy v; \
  setw -g mode-keys vi; \
  unbind -t vi-copy MouseDragEnd1Pane; \
  bind-key -t vi-copy 'v' begin-selection; \
  bind-key -t vi-copy 'C-v' rectangle-toggle; \
  bind-key -t vi-copy 'y' copy-selection; \
  bind P paste-buffer "

# note on `reattach-to-user-namespace` https://web.archive.org/web/20200731234050/http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/
if-shell -b '[ "$(uname)" = Darwin ]' " \
  set -g default-shell /opt/homebrew/bin/bash; \
  set -g default-command 'reattach-to-user-namespace -l bash'; \
  unbind-key -T copy-mode-vi y; \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe 'pbcopy' "
  # bind-key -T copy-mode-vi y send-keys -X copy-selection  #  on servers

if-shell -b '[ "$(uname)" = Linux ]' " \
  bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -selection clipboard' "



# --------------

# disable right click menu
unbind-key -T root MouseDown3Pane

# from http://endot.org/2011/12/06/my-tmux-configuration/
## vim-like pane resizing
bind -r C-left resize-pane  -L\; refresh-client -S
bind -r C-right resize-pane -R\; refresh-client -S
bind -r C-up resize-pane    -U\; refresh-client -S
bind -r C-down resize-pane  -D\; refresh-client -S

bind -r C-h select-pane -L\; refresh-client -S
bind -r C-l select-pane -R\; refresh-client -S
bind -r C-k select-pane -U\; refresh-client -S
bind -r C-j select-pane -D\; refresh-client -S
bind -r 'C-\' select-pane -l\;  # return to previous view (e.g. after :VtrFocusRunner)

# ------------------------------
# new pane or window -> cd to current pane dir

# default-shell shell for the new window will
# be bash; change `trap` to `exec zsh` if you
# want to change this
# TODO should we use hooks instead?
#
# example hooks:
# set-hook -g after-split-window 'selectp -T ""'
# set-hook -g after-new-window 'selectp -T ""'
# set-hook -g after-new-session 'selectp -T ""'
bind '"' split-window -c '#{pane_current_path}' 'exec bash --noprofile -c "~/Documents/scripts/cd-git-toplevel-or-pwd"'
bind % split-window -h -c '#{pane_current_path}' 'exec bash --noprofile -c "~/Documents/scripts/cd-git-toplevel-or-pwd"'
bind c new-window -c '#{pane_current_path}' 'exec bash --noprofile -c "~/Documents/scripts/cd-git-toplevel-or-pwd"'

# ------------------------------


bind C-Y set-window-option synchronize-panes
bind C-c clear-history

## tmux-copycat settings - tmux-copycat stored searches
#====================

# IPv4 & IPv6
#
# IPv6 snatched from https://stackoverflow.com/a/17871737
set -g @copycat_search_C-i '([[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3})|((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))' # custom keyboard shortcut for ip search

set -g @copycat_search_h '\b([0-9a-f]{7,40}|[[:alnum:]]{52}|[0-9a-f]{64}|[0-9a-f]{56}|[0-9a-zA-Z+]{68})\b' # custom hash search and keyboard shortcut

set -g @copycat_search_k '[A-Za-z0-9-]+-([a-f0-9]{10}-[a-z0-9]{5}|[a-z0-9]{5}|[0-9]+)' #  search for kubernetes objects

# 32 or 64 bit adresses
set -g @copycat_search_a '0x[A-Fa-f0-9]{8}|0x[A-Fa-f0-9]{16}|[A-Fa-f0-9]{8}|[A-Fa-f0-9]{16}'

# select link | link select | select url | url select
#
# from the `tr` man page:
#   [:graph:]
#          all printable characters, not including space
#
#
set -g @copycat_search_l '(((http|https|file|ssh|keybase)://)|(git@))[^ ]+'

# search for docker container id
set -g @copycat_search_i '[[:alnum:]]{12}\\s'

# any non-empty line
set -g @copycat_search_C-a '^.+$'

#====================


## tmux-continuum settings
#=========================

set -g @continuum-restore 'on'

#========================

## tmux-resurrect settings
#=========================

# does NOT work for FIREJAILED PROCESSES
# set -g @resurrect-processes 'n nnn "git ~"'
# set -g @resurrect-strategy-nvim 'session'  # TODO fix restart cds into directory of previously opened file
# set -g @resurrect-strategy-vim 'session'

#========================



## INSTALLING PLUGINS
## 1) tmux source ~/.tmux.conf
## 2) Press prefix + I or run $TMUX_PLUGIN_MANAGER_PATH/tpm/scripts/install_plugins.sh to fetch plugins and source them.

# List of plugins
set -g @plugin 'tmux-plugins/tpm'  # plugin manager

set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# ---------------------------------------------------------------------

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# running plugins#
run-shell ~/.tmux/plugins/tmux-copycat/copycat.tmux
run-shell ~/.tmux/plugins/tmux-logging/logging.tmux
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux
run-shell ~/.tmux/plugins/tmux-prefix-highlight/prefix_highlight.tmux

